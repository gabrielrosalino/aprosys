# Generated by Django 5.2.3 on 2025-07-19 18:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("nome", models.CharField(max_length=150)),
                ("contato", models.CharField(blank=True, max_length=11, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Curso",
            fields=[
                ("id_curso", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nome",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="Nome do curso"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Disciplina",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(
                        help_text="Digite o nome da disciplina. Exemplo: Matemática.",
                        max_length=100,
                        unique=True,
                        verbose_name="Nome da Disciplina",
                    ),
                ),
                (
                    "area_conhecimento",
                    models.CharField(
                        choices=[
                            ("CIENCIAS_NATUREZA", "Ciências da Natureza"),
                            ("CIENCIAS_HUMANAS", "Ciências Humanas"),
                            ("LINGUAGENS", "Linguagens"),
                            ("MATEMATICA", "Matemática"),
                        ],
                        default="MATEMATICA",
                        help_text="Selecione a área de conhecimento desta disciplina.",
                        max_length=50,
                        verbose_name="Área de Conhecimento",
                    ),
                ),
                (
                    "curriculo",
                    models.TextField(
                        blank=True,
                        help_text="Opcional: Adicione o currículo da disciplina.",
                        null=True,
                        verbose_name="Currículo",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Inativo"), (1, "Ativo")],
                        default=1,
                        verbose_name="Status da Disciplina",
                    ),
                ),
            ],
            options={
                "verbose_name": "Disciplina",
                "verbose_name_plural": "Disciplinas",
            },
        ),
        migrations.CreateModel(
            name="PeriodoLetivo",
            fields=[
                (
                    "id_periodo_letivo",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("ano", models.IntegerField(verbose_name="Ano do Período Letivo")),
                (
                    "semestre",
                    models.IntegerField(verbose_name="Semestre do Período Letivo"),
                ),
                (
                    "nome",
                    models.CharField(
                        max_length=30, verbose_name="Nome do Período Letivo"
                    ),
                ),
                ("data_inicio", models.DateField(verbose_name="Data de Início")),
                ("data_fim", models.DateField(verbose_name="Data Final")),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "INATIVO"), (1, "ATIVO")], verbose_name="Status"
                    ),
                ),
            ],
            options={
                "verbose_name": "Período Letivo",
                "verbose_name_plural": "Períodos Letivos",
            },
        ),
        migrations.CreateModel(
            name="Turno",
            fields=[
                ("turno_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "descricao",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="Descrição do Turno"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Aluno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome completo"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="E-mail"
                    ),
                ),
                (
                    "contato",
                    models.CharField(blank=True, max_length=20, verbose_name="Contato"),
                ),
                (
                    "nascimento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de nascimento"
                    ),
                ),
                (
                    "nacionalidade",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Nacionalidade"
                    ),
                ),
                (
                    "naturalidade",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Naturalidade"
                    ),
                ),
                (
                    "estado_civil",
                    models.CharField(
                        choices=[
                            ("solteiro", "Solteiro(a)"),
                            ("casado", "Casado(a)"),
                            ("divorciado", "Divorciado(a)"),
                            ("viuvo", "Viúvo(a)"),
                        ],
                        default="solteiro",
                        max_length=20,
                        verbose_name="Estado Civil",
                    ),
                ),
                (
                    "nome_pai",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nome do Pai"
                    ),
                ),
                (
                    "escolaridade_pai",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "ensino_fundamental_incompleto",
                                "Ensino Fundamental Incompleto",
                            ),
                            (
                                "ensino_fundamental_completo",
                                "Ensino Fundamental Completo",
                            ),
                            ("ensino_medio_incompleto", "Ensino Médio Incompleto"),
                            ("ensino_medio_completo", "Ensino Médio Completo"),
                            (
                                "ensino_superior_incompleto",
                                "Ensino Superior Incompleto",
                            ),
                            ("ensino_superior_completo", "Ensino Superior Completo"),
                        ],
                        max_length=50,
                        verbose_name="Escolaridade do Pai",
                    ),
                ),
                (
                    "nome_mae",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nome da Mãe"
                    ),
                ),
                (
                    "escolaridade_mae",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "ensino_fundamental_incompleto",
                                "Ensino Fundamental Incompleto",
                            ),
                            (
                                "ensino_fundamental_completo",
                                "Ensino Fundamental Completo",
                            ),
                            ("ensino_medio_incompleto", "Ensino Médio Incompleto"),
                            ("ensino_medio_completo", "Ensino Médio Completo"),
                            (
                                "ensino_superior_incompleto",
                                "Ensino Superior Incompleto",
                            ),
                            ("ensino_superior_completo", "Ensino Superior Completo"),
                        ],
                        max_length=50,
                        verbose_name="Escolaridade da Mãe",
                    ),
                ),
                (
                    "renda_familiar",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Renda familiar média",
                    ),
                ),
                ("rua", models.CharField(max_length=200, verbose_name="Rua")),
                ("numero", models.CharField(max_length=20, verbose_name="Número")),
                (
                    "complemento",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Complemento"
                    ),
                ),
                (
                    "bairro",
                    models.CharField(blank=True, max_length=100, verbose_name="Bairro"),
                ),
                (
                    "cidade",
                    models.CharField(blank=True, max_length=100, verbose_name="Cidade"),
                ),
                (
                    "estado",
                    models.CharField(blank=True, max_length=2, verbose_name="Estado"),
                ),
                ("cep", models.CharField(blank=True, max_length=9, verbose_name="CEP")),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Inativo"), (1, "Ativo")],
                        default=1,
                        verbose_name="Status",
                    ),
                ),
                (
                    "periodo_interesse",
                    models.IntegerField(
                        choices=[(0, "Matutino"), (1, "Vespertino"), (2, "Noturno")],
                        default=0,
                        verbose_name="Período de Interesse",
                    ),
                ),
                (
                    "curso_interesse",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="academico.curso",
                        verbose_name="Curso de Interesse",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Turma",
            fields=[
                ("id_turma", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nome",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="Nome da Turma"
                    ),
                ),
                (
                    "capacidade",
                    models.IntegerField(
                        verbose_name="Capacidade total de alunos na turma"
                    ),
                ),
                (
                    "data_inicio",
                    models.DateField(verbose_name="Data de início da turma"),
                ),
                ("data_fim", models.DateField(verbose_name="Data final da turma")),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "INATIVO"), (1, "ATIVO")], verbose_name="Status"
                    ),
                ),
                (
                    "periodo_letivo",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academico.periodoletivo",
                        verbose_name="Período Letivo",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TurmaDisciplina",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "INATIVO"), (1, "ATIVO")],
                        default=1,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "disciplina",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academico.disciplina",
                        verbose_name="Disciplina",
                    ),
                ),
                (
                    "turma",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academico.turma",
                        verbose_name="Turma",
                    ),
                ),
            ],
            options={
                "verbose_name": "Turma Disciplina",
                "verbose_name_plural": "Disciplinas das Turmas",
                "unique_together": {("turma", "disciplina")},
            },
        ),
        migrations.CreateModel(
            name="Voluntario",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="voluntario",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome completo"),
                ),
                (
                    "nascimento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de nascimento"
                    ),
                ),
                (
                    "cpf",
                    models.CharField(max_length=14, unique=True, verbose_name="CPF"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="E-mail"
                    ),
                ),
                (
                    "telefone_contato",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Telefone de Contato"
                    ),
                ),
                ("rua", models.CharField(max_length=200, verbose_name="Rua")),
                ("numero", models.CharField(max_length=20, verbose_name="Número")),
                (
                    "complemento",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Complemento"
                    ),
                ),
                (
                    "bairro",
                    models.CharField(blank=True, max_length=100, verbose_name="Bairro"),
                ),
                (
                    "cidade",
                    models.CharField(blank=True, max_length=100, verbose_name="Cidade"),
                ),
                (
                    "estado",
                    models.CharField(blank=True, max_length=2, verbose_name="Estado"),
                ),
                ("cep", models.CharField(blank=True, max_length=9, verbose_name="CEP")),
                (
                    "descricao_atividades",
                    models.TextField(
                        blank=True, verbose_name="Descrição das Atividades/Interesses"
                    ),
                ),
                (
                    "foto",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="voluntarios/perfis/fotos/",
                        verbose_name="Foto Principal",
                    ),
                ),
                (
                    "status_processo_voluntario",
                    models.CharField(
                        choices=[
                            ("AGUARDANDO_DOCUMENTOS", "Aguardando Documentos"),
                            ("ATIVO", "Ativo"),
                            ("INATIVO", "Inativo"),
                        ],
                        default="AGUARDANDO_DOCUMENTOS",
                        max_length=50,
                        verbose_name="Status do Processo",
                    ),
                ),
                (
                    "tipo_voluntario",
                    models.CharField(
                        choices=[
                            ("APOIO_ADMINISTRATIVO", "Apoio Administrativo"),
                            ("PROFESSOR", "Professor(a)"),
                            ("MONITOR", "Monitor(a)"),
                            ("OUTRO", "Outro / Não especificado"),
                        ],
                        default="OUTRO",
                        max_length=50,
                        verbose_name="Tipo de Voluntário",
                    ),
                ),
                (
                    "data_inicio_processo",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Data de Início do Processo",
                    ),
                ),
                ("disciplina", models.ManyToManyField(to="academico.disciplina")),
            ],
        ),
        migrations.CreateModel(
            name="TurmaAluno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "INATIVO"), (1, "ATIVO")],
                        default=1,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "aluno",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academico.aluno",
                        verbose_name="Aluno",
                    ),
                ),
                (
                    "turma",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academico.turma",
                        verbose_name="Turma",
                    ),
                ),
            ],
            options={
                "verbose_name": "Aluno Turma",
                "verbose_name_plural": "Alunos das Turmas",
                "unique_together": {("turma", "aluno")},
            },
        ),
        migrations.CreateModel(
            name="TurmaDisciplinaProfessor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "INATIVO"), (1, "ATIVO")],
                        default=1,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "turma_disciplina",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academico.turmadisciplina",
                        verbose_name="Turma Disciplina",
                    ),
                ),
                (
                    "voluntario",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academico.voluntario",
                        verbose_name="Turma",
                    ),
                ),
            ],
            options={
                "verbose_name": "Voluntário Disicplina",
                "verbose_name_plural": "Professores das Disciplinas nas Turmas",
                "unique_together": {("turma_disciplina", "voluntario")},
            },
        ),
    ]
